module.exports.config = {
  name: "protectAdmins",
  eventType: ["log:thread-admins"],
  version: "1.3.0",
  credits: "Mohammad Akash",
  description: "If an admin is demoted, bot re-promotes and kicks the remover with stylish messages"
};

module.exports.run = async ({ event, api, Users }) => {
  try {
    const botID = api.getCurrentUserID();
    const actorId = event.author; // ‡¶Ø‡ßá ‡¶¨‡ßç‡¶Ø‡¶ï‡ßç‡¶§‡¶ø ‡¶°‡¶ø‡¶Æ‡ßã‡¶ü ‡¶ï‡¶∞‡ßá‡¶õ‡ßá
    if (!actorId || String(actorId) === String(botID)) return;

    const data = event.logMessageData || {};
    let removedAdmins = [];

    // ‡¶∏‡¶Æ‡ßç‡¶≠‡¶æ‡¶¨‡ßç‡¶Ø ‡¶´‡¶ø‡¶≤‡ßç‡¶° ‡¶ö‡ßá‡¶ï
    if (Array.isArray(data.removedAdminIDs)) removedAdmins = removedAdmins.concat(data.removedAdminIDs);
    if (Array.isArray(data.adminsRemoved)) removedAdmins = removedAdmins.concat(data.adminsRemoved);
    if (data.ADMIN_EVENT && Array.isArray(data.ADMIN_EVENT.targetIDs)) removedAdmins = removedAdmins.concat(data.ADMIN_EVENT.targetIDs);

    removedAdmins = Array.from(new Set(removedAdmins.map(id => String(id))));
    if (removedAdmins.length === 0) return;
    if (removedAdmins.includes(String(actorId))) return; // self-demote ‡¶π‡¶≤‡ßá ‡¶ï‡¶ø‡¶õ‡ßÅ ‡¶®‡¶æ ‡¶ï‡¶∞‡¶æ

    // ‡¶°‡¶ø‡¶Æ‡ßã‡¶ü ‡¶π‡¶ì‡ßü‡¶æ ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶°‡¶Æ‡¶ø‡¶®‡¶ï‡ßá ‡¶™‡ßÅ‡¶®‡¶É‡¶Ö‡ßç‡¶Ø‡¶æ‡¶°‡¶Æ‡¶ø‡¶® ‡¶¨‡¶æ‡¶®‡¶æ‡¶®‡ßã‡¶∞ ‡¶ö‡ßá‡¶∑‡ßç‡¶ü‡¶æ
    for (const adminId of removedAdmins) {
      api.changeAdminStatus(adminId, event.threadID, true, (err) => {
        if (err) console.log(`Failed to re-promote ${adminId} as admin:`, err);
        else console.log(`${adminId} re-promoted as admin successfully`);
      });
    }

    // ‡¶ï‡¶ø‡¶ï ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶®‡¶æ‡¶Æ ‡¶®‡ßá‡¶ì‡ßü‡¶æ
    const actorName = global.data?.userName?.get(actorId) || await Users.getNameUser(actorId);
    const removedNames = await Promise.all(removedAdmins.map(async id => {
      return global.data?.userName?.get(id) || await Users.getNameUser(id).catch(() => id);
    }));
    const targetsText = removedNames.join(", ");

    // ‡¶∏‡ßç‡¶ü‡¶æ‡¶á‡¶≤‡¶ø‡¶∂ ‡¶Æ‡ßá‡¶∏‡ßá‡¶ú
    const messages = [
      `üî• ‡¶ì‡¶π ‡¶®‡¶æ! ${actorName} üò±\n‡¶§‡ßÅ‡¶á ${targetsText} ‡¶ï‡ßá ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶°‡¶Æ‡¶ø‡¶® ‡¶•‡ßá‡¶ï‡ßá ‡¶∏‡¶∞‡¶æ‡¶á‡¶õ‡¶ø‡¶∏!\n‡¶Ü‡¶Æ‡¶æ‡¶∞ ‡¶ï‡¶æ‡¶õ‡ßá ‡¶ß‡¶∞‡¶æ ‡¶™‡ßú‡ßá‡¶õ‡¶ø‡¶∏‚Ä¶ ‡¶§‡¶æ‡¶á ‡¶§‡ßã‡¶ï‡ßá ‡¶ó‡ßç‡¶∞‡ßÅ‡¶™ ‡¶•‡ßá‡¶ï‡ßá ‡¶ï‡¶ø‡¶ï ‡¶ï‡¶∞‡¶≤‡¶æ‡¶Æ! üö´üí•`,
      `‚ö°Ô∏è Alert! ‚ö°Ô∏è\nHey ${actorName} üòé, ‡¶§‡ßÅ‡¶Æ‡¶ø ${targetsText} ‡¶ï‡ßá ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶°‡¶Æ‡¶ø‡¶® ‡¶•‡ßá‡¶ï‡ßá ‡¶∏‡¶∞‡¶æ‡¶≤‡ßá?\nüòè ‡¶Æ‡¶ú‡¶æ ‡¶π‡ßü‡ßá ‡¶ó‡ßá‡¶≤! ‡¶è‡¶ñ‡¶® ‡¶§‡ßã‡¶ï‡ßá üëä ‡¶ó‡ßç‡¶∞‡ßÅ‡¶™ ‡¶•‡ßá‡¶ï‡ßá ‡¶ï‡¶ø‡¶ï ‡¶ï‡¶∞‡¶≤‡¶æ‡¶Æ!\nüíÄ ‡¶¨‡¶ü ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶°‡¶Æ‡¶ø‡¶® ‡¶™‡ßç‡¶∞‡ßã‡¶ü‡ßá‡¶ï‡¶∂‡¶® ‡¶∏‡¶ï‡ßç‡¶∞‡¶ø‡¶Ø‡¶º!`,
      `üïµÔ∏è‚Äç‚ôÇÔ∏è ‡¶π‡ßá ${actorName}, ‡¶§‡ßÅ‡¶Æ‡¶ø ‡¶ï‡¶ø ${targetsText} ‡¶ï‡ßá ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶°‡¶Æ‡¶ø‡¶® ‡¶•‡ßá‡¶ï‡ßá ‡¶∏‡¶∞‡¶æ‡¶®‡ßã‡¶∞ ‡¶∏‡¶æ‡¶π‡¶∏ ‡¶ï‡¶∞‡¶≤‡¶ø?\nüéØ ‡¶ö‡ßÅ‡¶™‡¶ö‡¶æ‡¶™ ‡¶¨‡¶∏‡ßá ‡¶•‡¶æ‡¶ï, ‡¶Ü‡¶Æ‡¶ø ‡¶§‡ßã‡¶ï‡ßá ‡¶Ü‡¶¨‡¶æ‡¶∞ ‡¶ó‡ßç‡¶∞‡ßÅ‡¶™ ‡¶•‡ßá‡¶ï‡ßá ‡¶¨‡ßá‡¶∞ ‡¶ï‡¶∞‡ßá ‡¶¶‡¶ø‡¶≤‡¶æ‡¶Æ!\nüíº ‡¶¨‡¶ü‡ßá‡¶∞ ‡¶®‡¶ø‡ßü‡¶Æ: ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶°‡¶Æ‡¶ø‡¶®‡¶¶‡ßá‡¶∞ ‡¶∏‡¶æ‡¶•‡ßá ‡¶õ‡¶ø‡¶®‡¶ø‡¶Æ‡¶ø‡¶®‡¶ø ‡¶®‡ßá‡¶á!`
    ];

    const randomMsg = messages[Math.floor(Math.random() * messages.length)];

    api.removeUserFromGroup(actorId, event.threadID, (err) => {
      if (err) {
        api.sendMessage(
          `‚ö†Ô∏è ‡¶∏‡¶§‡¶∞‡ßç‡¶ï‡¶§‡¶æ: ${actorName} (‡¶Ø‡¶ø‡¶®‡¶ø ${targetsText} ‡¶ï‡ßá ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶°‡¶Æ‡¶ø‡¶® ‡¶•‡ßá‡¶ï‡ßá ‡¶∏‡¶∞‡¶ø‡ßü‡ßá‡¶õ‡ßá‡¶®) ‚Äî ‡¶Ü‡¶Æ‡¶æ‡¶ï‡ßá ‡¶ï‡¶ø‡¶ï ‡¶ï‡¶∞‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡¶≤‡¶æ‡¶Æ ‡¶®‡¶æ‡•§ ‡¶π‡ßü‡¶§‡ßã ‡¶¨‡¶ü ‡¶™‡¶æ‡¶∞‡¶Æ‡¶ø‡¶∂‡¶® ‡¶®‡ßá‡¶á‡•§`,
          event.threadID
        );
      } else {
        api.sendMessage(randomMsg, event.threadID);
      }
    });

  } catch (error) {
    console.error("protectAdmins error:", error);
  }
};
